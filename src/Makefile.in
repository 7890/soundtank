# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
DEPDIR = @DEPDIR@
HAVE_XML2_CONFIG = @HAVE_XML2_CONFIG@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
PACKAGE = @PACKAGE@
SOUNDTANK_CFLAGS = @SOUNDTANK_CFLAGS@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
INCLUDES = `xml2-config --cflags`

AM_CFLAGS = $(SOUNDTANK_CFLAGS) 

bin_PROGRAMS = soundtank

soundtank_SOURCES = soundtank.c soundtank_startup.c soundtank_types.c buffer.c channel.c data_port.c control.c engine.c engine_alsa.c engine_jack.c process.c util/linked_list.c util/generic_array.c util/string_to_argv.c util/namespace.c rtobject.c rtobject_instance.c xml_file.c event_map/event_map.c event_map/map_test.c event_map/map_action.c event_map/scale.c event_map/rt_route_ev.c event_map/tests/test_callbacks.c event_map/tests/test_print_event_type.c event_map/tests/test_true.c event_map/tests/test_event_type.c event_map/tests/test_event_param_in_range.c event_map/actions/action_callbacks.c event_map/actions/jump.c event_map/actions/set_control.c event_map/actions/note_to_pitch.c event_map/actions/set_note_flag.c event_map/auto_map.c imp_objects/imp_objects.c imp_objects/local_in_and_out.c imp_objects/signal_path.c imp_objects/alsa_extern.c imp_objects/jack_extern.c imp_objects/test_source.c imp_objects/ladspa_plugin.c imp_objects/ladspa_load.c imp_objects/ladspa_listplugins.c imp_objects/ladspa_search.c imp_objects/ladspa_default.c imp_objects/channel_ops.c commands/commands.c commands/engine_commands.c commands/stat.c commands/ls.c commands/cd.c commands/cr.c commands/sv.c commands/mv.c commands/at.c commands/set.c commands/map.c commands/debug.c

soundtank_LDFLAGS = `xml2-config --libs`

soundtank_LDADD = -lasound -ljack -lpopt -lreadline -lncurses 
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = soundtank$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_soundtank_OBJECTS = soundtank.$(OBJEXT) soundtank_startup.$(OBJEXT) \
	soundtank_types.$(OBJEXT) buffer.$(OBJEXT) channel.$(OBJEXT) \
	data_port.$(OBJEXT) control.$(OBJEXT) engine.$(OBJEXT) \
	engine_alsa.$(OBJEXT) engine_jack.$(OBJEXT) process.$(OBJEXT) \
	linked_list.$(OBJEXT) generic_array.$(OBJEXT) \
	string_to_argv.$(OBJEXT) namespace.$(OBJEXT) rtobject.$(OBJEXT) \
	rtobject_instance.$(OBJEXT) xml_file.$(OBJEXT) \
	event_map.$(OBJEXT) map_test.$(OBJEXT) map_action.$(OBJEXT) \
	scale.$(OBJEXT) rt_route_ev.$(OBJEXT) test_callbacks.$(OBJEXT) \
	test_print_event_type.$(OBJEXT) test_true.$(OBJEXT) \
	test_event_type.$(OBJEXT) test_event_param_in_range.$(OBJEXT) \
	action_callbacks.$(OBJEXT) jump.$(OBJEXT) set_control.$(OBJEXT) \
	note_to_pitch.$(OBJEXT) set_note_flag.$(OBJEXT) \
	auto_map.$(OBJEXT) imp_objects.$(OBJEXT) \
	local_in_and_out.$(OBJEXT) signal_path.$(OBJEXT) \
	alsa_extern.$(OBJEXT) jack_extern.$(OBJEXT) \
	test_source.$(OBJEXT) ladspa_plugin.$(OBJEXT) \
	ladspa_load.$(OBJEXT) ladspa_listplugins.$(OBJEXT) \
	ladspa_search.$(OBJEXT) ladspa_default.$(OBJEXT) \
	channel_ops.$(OBJEXT) commands.$(OBJEXT) \
	engine_commands.$(OBJEXT) stat.$(OBJEXT) ls.$(OBJEXT) \
	cd.$(OBJEXT) cr.$(OBJEXT) sv.$(OBJEXT) mv.$(OBJEXT) \
	at.$(OBJEXT) set.$(OBJEXT) map.$(OBJEXT) debug.$(OBJEXT)
soundtank_OBJECTS = $(am_soundtank_OBJECTS)
soundtank_DEPENDENCIES =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/action_callbacks.Po \
@AMDEP_TRUE@	./$(DEPDIR)/alsa_extern.Po ./$(DEPDIR)/at.Po \
@AMDEP_TRUE@	./$(DEPDIR)/auto_map.Po ./$(DEPDIR)/buffer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/cd.Po ./$(DEPDIR)/channel.Po \
@AMDEP_TRUE@	./$(DEPDIR)/channel_ops.Po ./$(DEPDIR)/commands.Po \
@AMDEP_TRUE@	./$(DEPDIR)/control.Po ./$(DEPDIR)/cr.Po \
@AMDEP_TRUE@	./$(DEPDIR)/data_port.Po ./$(DEPDIR)/debug.Po \
@AMDEP_TRUE@	./$(DEPDIR)/engine.Po ./$(DEPDIR)/engine_alsa.Po \
@AMDEP_TRUE@	./$(DEPDIR)/engine_commands.Po \
@AMDEP_TRUE@	./$(DEPDIR)/engine_jack.Po ./$(DEPDIR)/event_map.Po \
@AMDEP_TRUE@	./$(DEPDIR)/generic_array.Po \
@AMDEP_TRUE@	./$(DEPDIR)/imp_objects.Po \
@AMDEP_TRUE@	./$(DEPDIR)/jack_extern.Po ./$(DEPDIR)/jump.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ladspa_default.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ladspa_listplugins.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ladspa_load.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ladspa_plugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ladspa_search.Po \
@AMDEP_TRUE@	./$(DEPDIR)/linked_list.Po \
@AMDEP_TRUE@	./$(DEPDIR)/local_in_and_out.Po ./$(DEPDIR)/ls.Po \
@AMDEP_TRUE@	./$(DEPDIR)/map.Po ./$(DEPDIR)/map_action.Po \
@AMDEP_TRUE@	./$(DEPDIR)/map_test.Po ./$(DEPDIR)/mv.Po \
@AMDEP_TRUE@	./$(DEPDIR)/namespace.Po \
@AMDEP_TRUE@	./$(DEPDIR)/note_to_pitch.Po ./$(DEPDIR)/process.Po \
@AMDEP_TRUE@	./$(DEPDIR)/rt_route_ev.Po ./$(DEPDIR)/rtobject.Po \
@AMDEP_TRUE@	./$(DEPDIR)/rtobject_instance.Po \
@AMDEP_TRUE@	./$(DEPDIR)/scale.Po ./$(DEPDIR)/set.Po \
@AMDEP_TRUE@	./$(DEPDIR)/set_control.Po \
@AMDEP_TRUE@	./$(DEPDIR)/set_note_flag.Po \
@AMDEP_TRUE@	./$(DEPDIR)/signal_path.Po ./$(DEPDIR)/soundtank.Po \
@AMDEP_TRUE@	./$(DEPDIR)/soundtank_startup.Po \
@AMDEP_TRUE@	./$(DEPDIR)/soundtank_types.Po ./$(DEPDIR)/stat.Po \
@AMDEP_TRUE@	./$(DEPDIR)/string_to_argv.Po ./$(DEPDIR)/sv.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test_callbacks.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test_event_param_in_range.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test_event_type.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test_print_event_type.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test_source.Po ./$(DEPDIR)/test_true.Po \
@AMDEP_TRUE@	./$(DEPDIR)/xml_file.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(soundtank_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(soundtank_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
linked_list.$(OBJEXT): util/linked_list.c
generic_array.$(OBJEXT): util/generic_array.c
string_to_argv.$(OBJEXT): util/string_to_argv.c
namespace.$(OBJEXT): util/namespace.c
event_map.$(OBJEXT): event_map/event_map.c
map_test.$(OBJEXT): event_map/map_test.c
map_action.$(OBJEXT): event_map/map_action.c
scale.$(OBJEXT): event_map/scale.c
rt_route_ev.$(OBJEXT): event_map/rt_route_ev.c
test_callbacks.$(OBJEXT): event_map/tests/test_callbacks.c
test_print_event_type.$(OBJEXT): event_map/tests/test_print_event_type.c
test_true.$(OBJEXT): event_map/tests/test_true.c
test_event_type.$(OBJEXT): event_map/tests/test_event_type.c
test_event_param_in_range.$(OBJEXT): \
	event_map/tests/test_event_param_in_range.c
action_callbacks.$(OBJEXT): event_map/actions/action_callbacks.c
jump.$(OBJEXT): event_map/actions/jump.c
set_control.$(OBJEXT): event_map/actions/set_control.c
note_to_pitch.$(OBJEXT): event_map/actions/note_to_pitch.c
set_note_flag.$(OBJEXT): event_map/actions/set_note_flag.c
auto_map.$(OBJEXT): event_map/auto_map.c
imp_objects.$(OBJEXT): imp_objects/imp_objects.c
local_in_and_out.$(OBJEXT): imp_objects/local_in_and_out.c
signal_path.$(OBJEXT): imp_objects/signal_path.c
alsa_extern.$(OBJEXT): imp_objects/alsa_extern.c
jack_extern.$(OBJEXT): imp_objects/jack_extern.c
test_source.$(OBJEXT): imp_objects/test_source.c
ladspa_plugin.$(OBJEXT): imp_objects/ladspa_plugin.c
ladspa_load.$(OBJEXT): imp_objects/ladspa_load.c
ladspa_listplugins.$(OBJEXT): imp_objects/ladspa_listplugins.c
ladspa_search.$(OBJEXT): imp_objects/ladspa_search.c
ladspa_default.$(OBJEXT): imp_objects/ladspa_default.c
channel_ops.$(OBJEXT): imp_objects/channel_ops.c
commands.$(OBJEXT): commands/commands.c
engine_commands.$(OBJEXT): commands/engine_commands.c
stat.$(OBJEXT): commands/stat.c
ls.$(OBJEXT): commands/ls.c
cd.$(OBJEXT): commands/cd.c
cr.$(OBJEXT): commands/cr.c
sv.$(OBJEXT): commands/sv.c
mv.$(OBJEXT): commands/mv.c
at.$(OBJEXT): commands/at.c
set.$(OBJEXT): commands/set.c
map.$(OBJEXT): commands/map.c
debug.$(OBJEXT): commands/debug.c
soundtank$(EXEEXT): $(soundtank_OBJECTS) $(soundtank_DEPENDENCIES) 
	@rm -f soundtank$(EXEEXT)
	$(LINK) $(soundtank_LDFLAGS) $(soundtank_OBJECTS) $(soundtank_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/action_callbacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alsa_extern.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/at.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auto_map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/buffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channel_ops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/commands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/control.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/data_port.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/engine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/engine_alsa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/engine_commands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/engine_jack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/event_map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generic_array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/imp_objects.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jack_extern.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ladspa_default.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ladspa_listplugins.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ladspa_load.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ladspa_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ladspa_search.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linked_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/local_in_and_out.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/map_action.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/map_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/namespace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/note_to_pitch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/process.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rt_route_ev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rtobject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rtobject_instance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_control.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_note_flag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signal_path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/soundtank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/soundtank_startup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/soundtank_types.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/string_to_argv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_callbacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_event_param_in_range.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_event_type.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_print_event_type.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_source.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_true.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xml_file.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

linked_list.o: util/linked_list.c
@AMDEP_TRUE@	source='util/linked_list.c' object='linked_list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/linked_list.Po' tmpdepfile='$(DEPDIR)/linked_list.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o linked_list.o `test -f 'util/linked_list.c' || echo '$(srcdir)/'`util/linked_list.c

linked_list.obj: util/linked_list.c
@AMDEP_TRUE@	source='util/linked_list.c' object='linked_list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/linked_list.Po' tmpdepfile='$(DEPDIR)/linked_list.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o linked_list.obj `cygpath -w util/linked_list.c`

generic_array.o: util/generic_array.c
@AMDEP_TRUE@	source='util/generic_array.c' object='generic_array.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/generic_array.Po' tmpdepfile='$(DEPDIR)/generic_array.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o generic_array.o `test -f 'util/generic_array.c' || echo '$(srcdir)/'`util/generic_array.c

generic_array.obj: util/generic_array.c
@AMDEP_TRUE@	source='util/generic_array.c' object='generic_array.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/generic_array.Po' tmpdepfile='$(DEPDIR)/generic_array.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o generic_array.obj `cygpath -w util/generic_array.c`

string_to_argv.o: util/string_to_argv.c
@AMDEP_TRUE@	source='util/string_to_argv.c' object='string_to_argv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/string_to_argv.Po' tmpdepfile='$(DEPDIR)/string_to_argv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o string_to_argv.o `test -f 'util/string_to_argv.c' || echo '$(srcdir)/'`util/string_to_argv.c

string_to_argv.obj: util/string_to_argv.c
@AMDEP_TRUE@	source='util/string_to_argv.c' object='string_to_argv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/string_to_argv.Po' tmpdepfile='$(DEPDIR)/string_to_argv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o string_to_argv.obj `cygpath -w util/string_to_argv.c`

namespace.o: util/namespace.c
@AMDEP_TRUE@	source='util/namespace.c' object='namespace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/namespace.Po' tmpdepfile='$(DEPDIR)/namespace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o namespace.o `test -f 'util/namespace.c' || echo '$(srcdir)/'`util/namespace.c

namespace.obj: util/namespace.c
@AMDEP_TRUE@	source='util/namespace.c' object='namespace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/namespace.Po' tmpdepfile='$(DEPDIR)/namespace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o namespace.obj `cygpath -w util/namespace.c`

event_map.o: event_map/event_map.c
@AMDEP_TRUE@	source='event_map/event_map.c' object='event_map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/event_map.Po' tmpdepfile='$(DEPDIR)/event_map.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o event_map.o `test -f 'event_map/event_map.c' || echo '$(srcdir)/'`event_map/event_map.c

event_map.obj: event_map/event_map.c
@AMDEP_TRUE@	source='event_map/event_map.c' object='event_map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/event_map.Po' tmpdepfile='$(DEPDIR)/event_map.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o event_map.obj `cygpath -w event_map/event_map.c`

map_test.o: event_map/map_test.c
@AMDEP_TRUE@	source='event_map/map_test.c' object='map_test.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/map_test.Po' tmpdepfile='$(DEPDIR)/map_test.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o map_test.o `test -f 'event_map/map_test.c' || echo '$(srcdir)/'`event_map/map_test.c

map_test.obj: event_map/map_test.c
@AMDEP_TRUE@	source='event_map/map_test.c' object='map_test.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/map_test.Po' tmpdepfile='$(DEPDIR)/map_test.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o map_test.obj `cygpath -w event_map/map_test.c`

map_action.o: event_map/map_action.c
@AMDEP_TRUE@	source='event_map/map_action.c' object='map_action.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/map_action.Po' tmpdepfile='$(DEPDIR)/map_action.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o map_action.o `test -f 'event_map/map_action.c' || echo '$(srcdir)/'`event_map/map_action.c

map_action.obj: event_map/map_action.c
@AMDEP_TRUE@	source='event_map/map_action.c' object='map_action.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/map_action.Po' tmpdepfile='$(DEPDIR)/map_action.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o map_action.obj `cygpath -w event_map/map_action.c`

scale.o: event_map/scale.c
@AMDEP_TRUE@	source='event_map/scale.c' object='scale.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/scale.Po' tmpdepfile='$(DEPDIR)/scale.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scale.o `test -f 'event_map/scale.c' || echo '$(srcdir)/'`event_map/scale.c

scale.obj: event_map/scale.c
@AMDEP_TRUE@	source='event_map/scale.c' object='scale.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/scale.Po' tmpdepfile='$(DEPDIR)/scale.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scale.obj `cygpath -w event_map/scale.c`

rt_route_ev.o: event_map/rt_route_ev.c
@AMDEP_TRUE@	source='event_map/rt_route_ev.c' object='rt_route_ev.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/rt_route_ev.Po' tmpdepfile='$(DEPDIR)/rt_route_ev.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rt_route_ev.o `test -f 'event_map/rt_route_ev.c' || echo '$(srcdir)/'`event_map/rt_route_ev.c

rt_route_ev.obj: event_map/rt_route_ev.c
@AMDEP_TRUE@	source='event_map/rt_route_ev.c' object='rt_route_ev.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/rt_route_ev.Po' tmpdepfile='$(DEPDIR)/rt_route_ev.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rt_route_ev.obj `cygpath -w event_map/rt_route_ev.c`

test_callbacks.o: event_map/tests/test_callbacks.c
@AMDEP_TRUE@	source='event_map/tests/test_callbacks.c' object='test_callbacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_callbacks.Po' tmpdepfile='$(DEPDIR)/test_callbacks.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_callbacks.o `test -f 'event_map/tests/test_callbacks.c' || echo '$(srcdir)/'`event_map/tests/test_callbacks.c

test_callbacks.obj: event_map/tests/test_callbacks.c
@AMDEP_TRUE@	source='event_map/tests/test_callbacks.c' object='test_callbacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_callbacks.Po' tmpdepfile='$(DEPDIR)/test_callbacks.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_callbacks.obj `cygpath -w event_map/tests/test_callbacks.c`

test_print_event_type.o: event_map/tests/test_print_event_type.c
@AMDEP_TRUE@	source='event_map/tests/test_print_event_type.c' object='test_print_event_type.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_print_event_type.Po' tmpdepfile='$(DEPDIR)/test_print_event_type.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_print_event_type.o `test -f 'event_map/tests/test_print_event_type.c' || echo '$(srcdir)/'`event_map/tests/test_print_event_type.c

test_print_event_type.obj: event_map/tests/test_print_event_type.c
@AMDEP_TRUE@	source='event_map/tests/test_print_event_type.c' object='test_print_event_type.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_print_event_type.Po' tmpdepfile='$(DEPDIR)/test_print_event_type.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_print_event_type.obj `cygpath -w event_map/tests/test_print_event_type.c`

test_true.o: event_map/tests/test_true.c
@AMDEP_TRUE@	source='event_map/tests/test_true.c' object='test_true.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_true.Po' tmpdepfile='$(DEPDIR)/test_true.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_true.o `test -f 'event_map/tests/test_true.c' || echo '$(srcdir)/'`event_map/tests/test_true.c

test_true.obj: event_map/tests/test_true.c
@AMDEP_TRUE@	source='event_map/tests/test_true.c' object='test_true.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_true.Po' tmpdepfile='$(DEPDIR)/test_true.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_true.obj `cygpath -w event_map/tests/test_true.c`

test_event_type.o: event_map/tests/test_event_type.c
@AMDEP_TRUE@	source='event_map/tests/test_event_type.c' object='test_event_type.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_event_type.Po' tmpdepfile='$(DEPDIR)/test_event_type.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_event_type.o `test -f 'event_map/tests/test_event_type.c' || echo '$(srcdir)/'`event_map/tests/test_event_type.c

test_event_type.obj: event_map/tests/test_event_type.c
@AMDEP_TRUE@	source='event_map/tests/test_event_type.c' object='test_event_type.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_event_type.Po' tmpdepfile='$(DEPDIR)/test_event_type.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_event_type.obj `cygpath -w event_map/tests/test_event_type.c`

test_event_param_in_range.o: event_map/tests/test_event_param_in_range.c
@AMDEP_TRUE@	source='event_map/tests/test_event_param_in_range.c' object='test_event_param_in_range.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_event_param_in_range.Po' tmpdepfile='$(DEPDIR)/test_event_param_in_range.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_event_param_in_range.o `test -f 'event_map/tests/test_event_param_in_range.c' || echo '$(srcdir)/'`event_map/tests/test_event_param_in_range.c

test_event_param_in_range.obj: event_map/tests/test_event_param_in_range.c
@AMDEP_TRUE@	source='event_map/tests/test_event_param_in_range.c' object='test_event_param_in_range.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_event_param_in_range.Po' tmpdepfile='$(DEPDIR)/test_event_param_in_range.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_event_param_in_range.obj `cygpath -w event_map/tests/test_event_param_in_range.c`

action_callbacks.o: event_map/actions/action_callbacks.c
@AMDEP_TRUE@	source='event_map/actions/action_callbacks.c' object='action_callbacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/action_callbacks.Po' tmpdepfile='$(DEPDIR)/action_callbacks.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o action_callbacks.o `test -f 'event_map/actions/action_callbacks.c' || echo '$(srcdir)/'`event_map/actions/action_callbacks.c

action_callbacks.obj: event_map/actions/action_callbacks.c
@AMDEP_TRUE@	source='event_map/actions/action_callbacks.c' object='action_callbacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/action_callbacks.Po' tmpdepfile='$(DEPDIR)/action_callbacks.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o action_callbacks.obj `cygpath -w event_map/actions/action_callbacks.c`

jump.o: event_map/actions/jump.c
@AMDEP_TRUE@	source='event_map/actions/jump.c' object='jump.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/jump.Po' tmpdepfile='$(DEPDIR)/jump.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jump.o `test -f 'event_map/actions/jump.c' || echo '$(srcdir)/'`event_map/actions/jump.c

jump.obj: event_map/actions/jump.c
@AMDEP_TRUE@	source='event_map/actions/jump.c' object='jump.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/jump.Po' tmpdepfile='$(DEPDIR)/jump.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jump.obj `cygpath -w event_map/actions/jump.c`

set_control.o: event_map/actions/set_control.c
@AMDEP_TRUE@	source='event_map/actions/set_control.c' object='set_control.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/set_control.Po' tmpdepfile='$(DEPDIR)/set_control.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o set_control.o `test -f 'event_map/actions/set_control.c' || echo '$(srcdir)/'`event_map/actions/set_control.c

set_control.obj: event_map/actions/set_control.c
@AMDEP_TRUE@	source='event_map/actions/set_control.c' object='set_control.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/set_control.Po' tmpdepfile='$(DEPDIR)/set_control.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o set_control.obj `cygpath -w event_map/actions/set_control.c`

note_to_pitch.o: event_map/actions/note_to_pitch.c
@AMDEP_TRUE@	source='event_map/actions/note_to_pitch.c' object='note_to_pitch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/note_to_pitch.Po' tmpdepfile='$(DEPDIR)/note_to_pitch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o note_to_pitch.o `test -f 'event_map/actions/note_to_pitch.c' || echo '$(srcdir)/'`event_map/actions/note_to_pitch.c

note_to_pitch.obj: event_map/actions/note_to_pitch.c
@AMDEP_TRUE@	source='event_map/actions/note_to_pitch.c' object='note_to_pitch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/note_to_pitch.Po' tmpdepfile='$(DEPDIR)/note_to_pitch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o note_to_pitch.obj `cygpath -w event_map/actions/note_to_pitch.c`

set_note_flag.o: event_map/actions/set_note_flag.c
@AMDEP_TRUE@	source='event_map/actions/set_note_flag.c' object='set_note_flag.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/set_note_flag.Po' tmpdepfile='$(DEPDIR)/set_note_flag.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o set_note_flag.o `test -f 'event_map/actions/set_note_flag.c' || echo '$(srcdir)/'`event_map/actions/set_note_flag.c

set_note_flag.obj: event_map/actions/set_note_flag.c
@AMDEP_TRUE@	source='event_map/actions/set_note_flag.c' object='set_note_flag.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/set_note_flag.Po' tmpdepfile='$(DEPDIR)/set_note_flag.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o set_note_flag.obj `cygpath -w event_map/actions/set_note_flag.c`

auto_map.o: event_map/auto_map.c
@AMDEP_TRUE@	source='event_map/auto_map.c' object='auto_map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/auto_map.Po' tmpdepfile='$(DEPDIR)/auto_map.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o auto_map.o `test -f 'event_map/auto_map.c' || echo '$(srcdir)/'`event_map/auto_map.c

auto_map.obj: event_map/auto_map.c
@AMDEP_TRUE@	source='event_map/auto_map.c' object='auto_map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/auto_map.Po' tmpdepfile='$(DEPDIR)/auto_map.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o auto_map.obj `cygpath -w event_map/auto_map.c`

imp_objects.o: imp_objects/imp_objects.c
@AMDEP_TRUE@	source='imp_objects/imp_objects.c' object='imp_objects.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/imp_objects.Po' tmpdepfile='$(DEPDIR)/imp_objects.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o imp_objects.o `test -f 'imp_objects/imp_objects.c' || echo '$(srcdir)/'`imp_objects/imp_objects.c

imp_objects.obj: imp_objects/imp_objects.c
@AMDEP_TRUE@	source='imp_objects/imp_objects.c' object='imp_objects.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/imp_objects.Po' tmpdepfile='$(DEPDIR)/imp_objects.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o imp_objects.obj `cygpath -w imp_objects/imp_objects.c`

local_in_and_out.o: imp_objects/local_in_and_out.c
@AMDEP_TRUE@	source='imp_objects/local_in_and_out.c' object='local_in_and_out.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/local_in_and_out.Po' tmpdepfile='$(DEPDIR)/local_in_and_out.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o local_in_and_out.o `test -f 'imp_objects/local_in_and_out.c' || echo '$(srcdir)/'`imp_objects/local_in_and_out.c

local_in_and_out.obj: imp_objects/local_in_and_out.c
@AMDEP_TRUE@	source='imp_objects/local_in_and_out.c' object='local_in_and_out.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/local_in_and_out.Po' tmpdepfile='$(DEPDIR)/local_in_and_out.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o local_in_and_out.obj `cygpath -w imp_objects/local_in_and_out.c`

signal_path.o: imp_objects/signal_path.c
@AMDEP_TRUE@	source='imp_objects/signal_path.c' object='signal_path.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/signal_path.Po' tmpdepfile='$(DEPDIR)/signal_path.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o signal_path.o `test -f 'imp_objects/signal_path.c' || echo '$(srcdir)/'`imp_objects/signal_path.c

signal_path.obj: imp_objects/signal_path.c
@AMDEP_TRUE@	source='imp_objects/signal_path.c' object='signal_path.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/signal_path.Po' tmpdepfile='$(DEPDIR)/signal_path.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o signal_path.obj `cygpath -w imp_objects/signal_path.c`

alsa_extern.o: imp_objects/alsa_extern.c
@AMDEP_TRUE@	source='imp_objects/alsa_extern.c' object='alsa_extern.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/alsa_extern.Po' tmpdepfile='$(DEPDIR)/alsa_extern.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o alsa_extern.o `test -f 'imp_objects/alsa_extern.c' || echo '$(srcdir)/'`imp_objects/alsa_extern.c

alsa_extern.obj: imp_objects/alsa_extern.c
@AMDEP_TRUE@	source='imp_objects/alsa_extern.c' object='alsa_extern.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/alsa_extern.Po' tmpdepfile='$(DEPDIR)/alsa_extern.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o alsa_extern.obj `cygpath -w imp_objects/alsa_extern.c`

jack_extern.o: imp_objects/jack_extern.c
@AMDEP_TRUE@	source='imp_objects/jack_extern.c' object='jack_extern.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/jack_extern.Po' tmpdepfile='$(DEPDIR)/jack_extern.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jack_extern.o `test -f 'imp_objects/jack_extern.c' || echo '$(srcdir)/'`imp_objects/jack_extern.c

jack_extern.obj: imp_objects/jack_extern.c
@AMDEP_TRUE@	source='imp_objects/jack_extern.c' object='jack_extern.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/jack_extern.Po' tmpdepfile='$(DEPDIR)/jack_extern.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jack_extern.obj `cygpath -w imp_objects/jack_extern.c`

test_source.o: imp_objects/test_source.c
@AMDEP_TRUE@	source='imp_objects/test_source.c' object='test_source.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_source.Po' tmpdepfile='$(DEPDIR)/test_source.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_source.o `test -f 'imp_objects/test_source.c' || echo '$(srcdir)/'`imp_objects/test_source.c

test_source.obj: imp_objects/test_source.c
@AMDEP_TRUE@	source='imp_objects/test_source.c' object='test_source.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_source.Po' tmpdepfile='$(DEPDIR)/test_source.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_source.obj `cygpath -w imp_objects/test_source.c`

ladspa_plugin.o: imp_objects/ladspa_plugin.c
@AMDEP_TRUE@	source='imp_objects/ladspa_plugin.c' object='ladspa_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ladspa_plugin.Po' tmpdepfile='$(DEPDIR)/ladspa_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ladspa_plugin.o `test -f 'imp_objects/ladspa_plugin.c' || echo '$(srcdir)/'`imp_objects/ladspa_plugin.c

ladspa_plugin.obj: imp_objects/ladspa_plugin.c
@AMDEP_TRUE@	source='imp_objects/ladspa_plugin.c' object='ladspa_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ladspa_plugin.Po' tmpdepfile='$(DEPDIR)/ladspa_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ladspa_plugin.obj `cygpath -w imp_objects/ladspa_plugin.c`

ladspa_load.o: imp_objects/ladspa_load.c
@AMDEP_TRUE@	source='imp_objects/ladspa_load.c' object='ladspa_load.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ladspa_load.Po' tmpdepfile='$(DEPDIR)/ladspa_load.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ladspa_load.o `test -f 'imp_objects/ladspa_load.c' || echo '$(srcdir)/'`imp_objects/ladspa_load.c

ladspa_load.obj: imp_objects/ladspa_load.c
@AMDEP_TRUE@	source='imp_objects/ladspa_load.c' object='ladspa_load.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ladspa_load.Po' tmpdepfile='$(DEPDIR)/ladspa_load.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ladspa_load.obj `cygpath -w imp_objects/ladspa_load.c`

ladspa_listplugins.o: imp_objects/ladspa_listplugins.c
@AMDEP_TRUE@	source='imp_objects/ladspa_listplugins.c' object='ladspa_listplugins.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ladspa_listplugins.Po' tmpdepfile='$(DEPDIR)/ladspa_listplugins.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ladspa_listplugins.o `test -f 'imp_objects/ladspa_listplugins.c' || echo '$(srcdir)/'`imp_objects/ladspa_listplugins.c

ladspa_listplugins.obj: imp_objects/ladspa_listplugins.c
@AMDEP_TRUE@	source='imp_objects/ladspa_listplugins.c' object='ladspa_listplugins.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ladspa_listplugins.Po' tmpdepfile='$(DEPDIR)/ladspa_listplugins.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ladspa_listplugins.obj `cygpath -w imp_objects/ladspa_listplugins.c`

ladspa_search.o: imp_objects/ladspa_search.c
@AMDEP_TRUE@	source='imp_objects/ladspa_search.c' object='ladspa_search.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ladspa_search.Po' tmpdepfile='$(DEPDIR)/ladspa_search.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ladspa_search.o `test -f 'imp_objects/ladspa_search.c' || echo '$(srcdir)/'`imp_objects/ladspa_search.c

ladspa_search.obj: imp_objects/ladspa_search.c
@AMDEP_TRUE@	source='imp_objects/ladspa_search.c' object='ladspa_search.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ladspa_search.Po' tmpdepfile='$(DEPDIR)/ladspa_search.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ladspa_search.obj `cygpath -w imp_objects/ladspa_search.c`

ladspa_default.o: imp_objects/ladspa_default.c
@AMDEP_TRUE@	source='imp_objects/ladspa_default.c' object='ladspa_default.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ladspa_default.Po' tmpdepfile='$(DEPDIR)/ladspa_default.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ladspa_default.o `test -f 'imp_objects/ladspa_default.c' || echo '$(srcdir)/'`imp_objects/ladspa_default.c

ladspa_default.obj: imp_objects/ladspa_default.c
@AMDEP_TRUE@	source='imp_objects/ladspa_default.c' object='ladspa_default.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ladspa_default.Po' tmpdepfile='$(DEPDIR)/ladspa_default.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ladspa_default.obj `cygpath -w imp_objects/ladspa_default.c`

channel_ops.o: imp_objects/channel_ops.c
@AMDEP_TRUE@	source='imp_objects/channel_ops.c' object='channel_ops.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/channel_ops.Po' tmpdepfile='$(DEPDIR)/channel_ops.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o channel_ops.o `test -f 'imp_objects/channel_ops.c' || echo '$(srcdir)/'`imp_objects/channel_ops.c

channel_ops.obj: imp_objects/channel_ops.c
@AMDEP_TRUE@	source='imp_objects/channel_ops.c' object='channel_ops.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/channel_ops.Po' tmpdepfile='$(DEPDIR)/channel_ops.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o channel_ops.obj `cygpath -w imp_objects/channel_ops.c`

commands.o: commands/commands.c
@AMDEP_TRUE@	source='commands/commands.c' object='commands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/commands.Po' tmpdepfile='$(DEPDIR)/commands.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o commands.o `test -f 'commands/commands.c' || echo '$(srcdir)/'`commands/commands.c

commands.obj: commands/commands.c
@AMDEP_TRUE@	source='commands/commands.c' object='commands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/commands.Po' tmpdepfile='$(DEPDIR)/commands.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o commands.obj `cygpath -w commands/commands.c`

engine_commands.o: commands/engine_commands.c
@AMDEP_TRUE@	source='commands/engine_commands.c' object='engine_commands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/engine_commands.Po' tmpdepfile='$(DEPDIR)/engine_commands.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o engine_commands.o `test -f 'commands/engine_commands.c' || echo '$(srcdir)/'`commands/engine_commands.c

engine_commands.obj: commands/engine_commands.c
@AMDEP_TRUE@	source='commands/engine_commands.c' object='engine_commands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/engine_commands.Po' tmpdepfile='$(DEPDIR)/engine_commands.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o engine_commands.obj `cygpath -w commands/engine_commands.c`

stat.o: commands/stat.c
@AMDEP_TRUE@	source='commands/stat.c' object='stat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stat.Po' tmpdepfile='$(DEPDIR)/stat.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stat.o `test -f 'commands/stat.c' || echo '$(srcdir)/'`commands/stat.c

stat.obj: commands/stat.c
@AMDEP_TRUE@	source='commands/stat.c' object='stat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stat.Po' tmpdepfile='$(DEPDIR)/stat.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stat.obj `cygpath -w commands/stat.c`

ls.o: commands/ls.c
@AMDEP_TRUE@	source='commands/ls.c' object='ls.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ls.Po' tmpdepfile='$(DEPDIR)/ls.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ls.o `test -f 'commands/ls.c' || echo '$(srcdir)/'`commands/ls.c

ls.obj: commands/ls.c
@AMDEP_TRUE@	source='commands/ls.c' object='ls.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ls.Po' tmpdepfile='$(DEPDIR)/ls.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ls.obj `cygpath -w commands/ls.c`

cd.o: commands/cd.c
@AMDEP_TRUE@	source='commands/cd.c' object='cd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/cd.Po' tmpdepfile='$(DEPDIR)/cd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cd.o `test -f 'commands/cd.c' || echo '$(srcdir)/'`commands/cd.c

cd.obj: commands/cd.c
@AMDEP_TRUE@	source='commands/cd.c' object='cd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/cd.Po' tmpdepfile='$(DEPDIR)/cd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cd.obj `cygpath -w commands/cd.c`

cr.o: commands/cr.c
@AMDEP_TRUE@	source='commands/cr.c' object='cr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/cr.Po' tmpdepfile='$(DEPDIR)/cr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cr.o `test -f 'commands/cr.c' || echo '$(srcdir)/'`commands/cr.c

cr.obj: commands/cr.c
@AMDEP_TRUE@	source='commands/cr.c' object='cr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/cr.Po' tmpdepfile='$(DEPDIR)/cr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cr.obj `cygpath -w commands/cr.c`

sv.o: commands/sv.c
@AMDEP_TRUE@	source='commands/sv.c' object='sv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sv.Po' tmpdepfile='$(DEPDIR)/sv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sv.o `test -f 'commands/sv.c' || echo '$(srcdir)/'`commands/sv.c

sv.obj: commands/sv.c
@AMDEP_TRUE@	source='commands/sv.c' object='sv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sv.Po' tmpdepfile='$(DEPDIR)/sv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sv.obj `cygpath -w commands/sv.c`

mv.o: commands/mv.c
@AMDEP_TRUE@	source='commands/mv.c' object='mv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mv.Po' tmpdepfile='$(DEPDIR)/mv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mv.o `test -f 'commands/mv.c' || echo '$(srcdir)/'`commands/mv.c

mv.obj: commands/mv.c
@AMDEP_TRUE@	source='commands/mv.c' object='mv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mv.Po' tmpdepfile='$(DEPDIR)/mv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mv.obj `cygpath -w commands/mv.c`

at.o: commands/at.c
@AMDEP_TRUE@	source='commands/at.c' object='at.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/at.Po' tmpdepfile='$(DEPDIR)/at.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o at.o `test -f 'commands/at.c' || echo '$(srcdir)/'`commands/at.c

at.obj: commands/at.c
@AMDEP_TRUE@	source='commands/at.c' object='at.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/at.Po' tmpdepfile='$(DEPDIR)/at.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o at.obj `cygpath -w commands/at.c`

set.o: commands/set.c
@AMDEP_TRUE@	source='commands/set.c' object='set.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/set.Po' tmpdepfile='$(DEPDIR)/set.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o set.o `test -f 'commands/set.c' || echo '$(srcdir)/'`commands/set.c

set.obj: commands/set.c
@AMDEP_TRUE@	source='commands/set.c' object='set.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/set.Po' tmpdepfile='$(DEPDIR)/set.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o set.obj `cygpath -w commands/set.c`

map.o: commands/map.c
@AMDEP_TRUE@	source='commands/map.c' object='map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/map.Po' tmpdepfile='$(DEPDIR)/map.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o map.o `test -f 'commands/map.c' || echo '$(srcdir)/'`commands/map.c

map.obj: commands/map.c
@AMDEP_TRUE@	source='commands/map.c' object='map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/map.Po' tmpdepfile='$(DEPDIR)/map.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o map.obj `cygpath -w commands/map.c`

debug.o: commands/debug.c
@AMDEP_TRUE@	source='commands/debug.c' object='debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/debug.Po' tmpdepfile='$(DEPDIR)/debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o debug.o `test -f 'commands/debug.c' || echo '$(srcdir)/'`commands/debug.c

debug.obj: commands/debug.c
@AMDEP_TRUE@	source='commands/debug.c' object='debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/debug.Po' tmpdepfile='$(DEPDIR)/debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o debug.obj `cygpath -w commands/debug.c`
CCDEPMODE = @CCDEPMODE@
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic distclean distclean-compile distclean-depend \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
